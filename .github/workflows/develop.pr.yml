# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  pull_request:
    branches: [ "develop" ]

env:
  PORT: 3000
  NODE_ENV: test
  DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres?shema=public
  JWT_SECRET_KEY: dev-jwt-secret-key
  REDIS_HOST: localhost
  REDIS_PORT: 6379
  REDIS_USERNAME: default
  REDIS_PASSWORD: devNestPrismaRedisPass
  STOCK_PRICE_CRAWL_REPEAT_PATTERN: '0 16 * * 1-5'

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - run: yarn install --immutable --immutable-cache --check-cache
    - run: yarn run build

    - name: Test Coverage
      run: yarn run test:cov
      env:
        PORT: ${{ env.PORT }}
        NODE_ENV: ${{ env.NODE_ENV }}
        DATABASE_URL: ${{ env.DATABASE_URL }}
        JWT_SECRET_KEY: ${{ env.JWT_SECRET_KEY }}
        REDIS_HOST: ${{ env.REDIS_HOST }}
        REDIS_PORT: ${{ env.REDIS_PORT }}
        REDIS_USERNAME: ${{ env.REDIS_USERNAME }}
        REDIS_PASSWORD: ${{ env.REDIS_PASSWORD }}
